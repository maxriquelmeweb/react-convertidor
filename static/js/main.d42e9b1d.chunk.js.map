{"version":3,"sources":["NumeroLetras.js","components/Letters.jsx","components/Form.jsx","App.js","index.js"],"names":["Unidades","num","Decenas","decena","Math","floor","unidad","DecenasY","strSin","numUnidades","Centenas","centenas","decenas","Seccion","divisor","strSingular","strPlural","cientos","resto","letras","Millones","strMillones","strMiles","strCentenas","Miles","NumeroALetras","data","numero","enteros","centavos","round","letrasCentavos","letrasMonedaPlural","letrasMonedaSingular","letrasMonedaCentavoPlural","letrasMonedaCentavoSingular","Letters","cl","className","abs","Form","valorDolar","useState","guardarCL","dolar","guardarDolar","dom","guardarDom","clase","guardarClase","useEffect","href","type","placeholder","value","onChange","e","isNaN","toFixed","actualizarDesdeCL","parseInt","target","onKeyDownCapture","actualizarDesdeDolar","actualizarDesdeDom","App","consultarAPI","a","fetch","api","json","frase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAA,SAASA,EAASC,GAEd,OAAQA,GACJ,KAAK,EACD,MAAO,KACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,QAGf,MAAO,GAGX,SAASC,EAAQD,GAEb,IAAIE,EAASC,KAAKC,MAAMJ,EAAM,IAC1BK,EAASL,EAAgB,GAATE,EAEpB,OAAQA,GACJ,KAAK,EACD,OAAQG,GACJ,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,UACX,KAAK,EACD,MAAO,SACX,QACI,MAAO,QAAUN,EAASM,GAEtC,KAAK,EACD,OAAQA,GACJ,KAAK,EACD,MAAO,SACX,QACI,MAAO,SAAWN,EAASM,GAEvC,KAAK,EACD,OAAOC,EAAS,UAAWD,GAC/B,KAAK,EACD,OAAOC,EAAS,WAAYD,GAChC,KAAK,EACD,OAAOC,EAAS,YAAaD,GACjC,KAAK,EACD,OAAOC,EAAS,UAAWD,GAC/B,KAAK,EACD,OAAOC,EAAS,UAAWD,GAC/B,KAAK,EACD,OAAOC,EAAS,UAAWD,GAC/B,KAAK,EACD,OAAOC,EAAS,UAAWD,GAC/B,KAAK,EACD,OAAON,EAASM,IAI5B,SAASC,EAASC,EAAQC,GACtB,OAAIA,EAAc,EACPD,EAAS,MAAQR,EAASS,GAE9BD,EAGX,SAASE,EAAST,GACd,IAAIU,EAAWP,KAAKC,MAAMJ,EAAM,KAC5BW,EAAUX,EAAkB,IAAXU,EAErB,OAAQA,GACJ,KAAK,EACD,OAAIC,EAAU,EACH,UAAYV,EAAQU,GACxB,OACX,KAAK,EACD,MAAO,cAAgBV,EAAQU,GACnC,KAAK,EACD,MAAO,eAAiBV,EAAQU,GACpC,KAAK,EACD,MAAO,iBAAmBV,EAAQU,GACtC,KAAK,EACD,MAAO,cAAgBV,EAAQU,GACnC,KAAK,EACD,MAAO,eAAiBV,EAAQU,GACpC,KAAK,EACD,MAAO,eAAiBV,EAAQU,GACpC,KAAK,EACD,MAAO,eAAiBV,EAAQU,GACpC,KAAK,EACD,MAAO,eAAiBV,EAAQU,GAGxC,OAAOV,EAAQU,GAGnB,SAASC,EAAQZ,EAAKa,EAASC,EAAaC,GACxC,IAAIC,EAAUb,KAAKC,MAAMJ,EAAMa,GAC3BI,EAAQjB,EAAOgB,EAAUH,EAEzBK,EAAS,GAWb,OATIF,EAAU,IAENE,EADAF,EAAU,EACDP,EAASO,GAAW,IAAMD,EAE1BD,GAEbG,EAAQ,IACRC,GAAU,IAEPA,EAiBX,SAASC,EAASnB,GACd,IAAIa,EAAU,IAEVI,EAAQjB,EADEG,KAAKC,MAAMJ,EAAMa,GACFA,EAE7B,GAAa,GAATI,EACA,IAAIG,EAAcR,EAAQZ,EAAKa,EAAS,eAAgB,oBAEpDO,EAAcR,EAAQZ,EAAKa,EAAS,YAAa,YAGzD,IAAIQ,EAzBR,SAAerB,GACX,IAAIa,EAAU,IAEVI,EAAQjB,EADEG,KAAKC,MAAMJ,EAAMa,GACFA,EAEzBQ,EAAWT,EAAQZ,EAAKa,EAAS,SAAU,OAC3CS,EAAcb,EAASQ,GAE3B,MAAgB,IAAZI,EACOC,EAEJD,EAAW,IAAMC,EAcTC,CAAMN,GAErB,MAAmB,IAAfG,EACOC,EAEJD,EAAc,IAAMC,EAG/B,IA+BeG,EA/BQ,SAACxB,GACpB,IAAIyB,EAAO,CACPC,OAAQ1B,EACR2B,QAASxB,KAAKC,MAAMJ,GACpB4B,SAAazB,KAAK0B,MAAY,IAAN7B,GAAiC,IAAlBG,KAAKC,MAAMJ,GAClD8B,eAAgB,GAChBC,mBAAoB,QACpBC,qBAAsB,OAEtBC,0BAA2B,WAC3BC,4BAA6B,WAYjC,OATIT,EAAKG,SAAW,IAChBH,EAAKK,eAAiB,QACG,GAAjBL,EAAKG,SACET,EAASM,EAAKG,UAAY,IAAMH,EAAKS,4BAErCf,EAASM,EAAKG,UAAY,IAAMH,EAAKQ,4BAIpC,GAAhBR,EAAKE,QACE,QAAUF,EAAKM,mBAAqB,IAAMN,EAAKK,eACtC,GAAhBL,EAAKE,QACER,EAASM,EAAKE,SAAW,IAAMF,EAAKO,qBAAuB,IAAMP,EAAKK,eAEtEX,EAASM,EAAKE,SAAW,IAAMF,EAAKM,mBAAqB,IAAMN,EAAKK,gBChLpEK,EAXC,SAAC,GAAY,IAAVC,EAAS,EAATA,GAEf,OACI,cAAC,WAAD,UACI,qBAAKC,UAAU,cAAf,SACKD,EAAK,EAAL,gBAAkBZ,EAAcrB,KAAKmC,IAAIF,KAASZ,EAAcY,QC2HlEG,EA/HF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAGLC,mBAAS,GAHJ,mBAGtBL,EAHsB,KAGlBM,EAHkB,OAKCD,mBAAS,GALV,mBAKtBE,EALsB,KAKfC,EALe,OAOHH,mBAAS,GAPN,mBAOtBI,EAPsB,KAOjBC,EAPiB,OASCL,mBAAS,YATV,mBAStBM,EATsB,KASfC,EATe,KAkE7B,OARAC,qBAAU,WAEFD,EADAL,EAAQ,KACK,YAEA,cAElB,CAACA,IAGA,cAAC,WAAD,UACI,sBAAKN,UAAU,YAAf,UACI,qBAAKA,UAAU,yDAAf,SACI,mBAAGA,UAAU,eAAea,KAAK,KAAjC,sCAEJ,qBAAKb,UAAU,qCAAf,SACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,+CAGA,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAWU,EAAhB,UACI,iDACA,sBAAKV,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,mBAAf,iBAEJ,uBAAOc,KAAK,SAASd,UAAU,+BAA+Be,YAAY,gBAAgBC,MAAOjB,EAC7FkB,SAAU,SAAAC,GAAC,OA1E7B,SAAAA,GACtB,GAAIC,MAAMD,GAIN,OAHAb,EAAU,IACVE,EAAa,QACbE,EAAW,GAGfJ,EAAUa,GACV,IAAIZ,GAASY,EAAIf,GAAYiB,QAAQ,GACrCb,EAAaD,GACb,IAAIE,GAAOU,EAAI,IAAIE,QAAQ,GAC3BX,EAAWD,GA+D4Ca,CAAkBC,SAASJ,EAAEK,OAAOP,SAASQ,iBAAyB,IAAPzB,EAAW,kBAAMM,EAAU,KAAM,aAG3H,sBAAKL,UAAWU,EAAhB,UACI,4DACA,sBAAKV,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,mBAAf,iBAEJ,uBAAOc,KAAK,SAASd,UAAU,+BAA+Be,YAAY,gBAAgBC,MAAOV,EAC7FW,SAAU,SAAAC,GAAC,OArE1B,SAAAA,GACzB,GAAIC,MAAMD,GAIN,OAHAX,EAAa,IACbE,EAAW,QACXJ,EAAU,GAGdE,EAAaW,GACb,IAAInB,GAAMmB,EAAIf,GAAYiB,QAAQ,GAClCf,EAAUN,GACV,IAAIS,GAAOT,EAAK,IAAIqB,QAAQ,GAC5BX,EAAWD,GA0D4CiB,CAAqBH,SAASJ,EAAEK,OAAOP,SAASQ,iBAA4B,IAAVlB,EAAc,kBAAMC,EAAa,KAAM,aAGpI,sBAAKP,UAAWU,EAAhB,UACI,oDACA,sBAAKV,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,mBAAf,iBAEJ,uBAAOc,KAAK,SAASd,UAAU,+BAA+Be,YAAY,gBAAgBC,MAAOR,EAC7FS,SAAU,SAAAC,GAAC,OAhE5B,SAAAA,GACvB,GAAIC,MAAMD,GAIN,OAHAT,EAAW,IACXF,EAAa,QACbF,EAAU,GAGdI,EAAWS,GACX,IAAInB,GAAMmB,EAAI,IAAIE,QAAQ,GAC1Bf,EAAUN,GACV,IAAIO,GAASP,EAAKI,GAAYiB,QAAQ,GACtCb,EAAaD,GAqD0CoB,CAAmBJ,SAASJ,EAAEK,OAAOP,SAASQ,iBAA0B,IAARhB,EAAY,kBAAMC,EAAW,KAAM,kBAKrIV,EAAK,KAAcA,GAAM,IAAoB,KAAPA,EAAY,KAC/C,cAAC,EAAD,CACIA,GAAIA,IACH,kBC/FtB4B,MArBf,WAAgB,IAAD,EAEsBvB,mBAAS,GAF/B,mBAEND,EAFM,KAEMI,EAFN,KAIPqB,EAAY,uCAAG,gCAAAC,EAAA,sEACDC,MAAM,oCADL,cACbC,EADa,gBAECA,EAAIC,OAFL,OAEbC,EAFa,OAGf3B,EAAQ2B,EAAK,MAAU,GAAf,MACZ1B,EAAaD,GAJM,2CAAH,qDAYlB,OAJAM,qBAAU,WACRgB,MACC,IAGD,cAAC,EAAD,CAAMzB,WAAYA,KChBtB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d42e9b1d.chunk.js","sourcesContent":["function Unidades(num) {\r\n\r\n    switch (num) {\r\n        case 1:\r\n            return \"UN\";\r\n        case 2:\r\n            return \"DOS\";\r\n        case 3:\r\n            return \"TRES\";\r\n        case 4:\r\n            return \"CUATRO\";\r\n        case 5:\r\n            return \"CINCO\";\r\n        case 6:\r\n            return \"SEIS\";\r\n        case 7:\r\n            return \"SIETE\";\r\n        case 8:\r\n            return \"OCHO\";\r\n        case 9:\r\n            return \"NUEVE\";\r\n    }\r\n\r\n    return \"\";\r\n} //Unidades()\r\n\r\nfunction Decenas(num) {\r\n\r\n    var decena = Math.floor(num / 10);\r\n    var unidad = num - (decena * 10);\r\n\r\n    switch (decena) {\r\n        case 1:\r\n            switch (unidad) {\r\n                case 0:\r\n                    return \"DIEZ\";\r\n                case 1:\r\n                    return \"ONCE\";\r\n                case 2:\r\n                    return \"DOCE\";\r\n                case 3:\r\n                    return \"TRECE\";\r\n                case 4:\r\n                    return \"CATORCE\";\r\n                case 5:\r\n                    return \"QUINCE\";\r\n                default:\r\n                    return \"DIECI\" + Unidades(unidad);\r\n            }\r\n        case 2:\r\n            switch (unidad) {\r\n                case 0:\r\n                    return \"VEINTE\";\r\n                default:\r\n                    return \"VEINTI\" + Unidades(unidad);\r\n            }\r\n        case 3:\r\n            return DecenasY(\"TREINTA\", unidad);\r\n        case 4:\r\n            return DecenasY(\"CUARENTA\", unidad);\r\n        case 5:\r\n            return DecenasY(\"CINCUENTA\", unidad);\r\n        case 6:\r\n            return DecenasY(\"SESENTA\", unidad);\r\n        case 7:\r\n            return DecenasY(\"SETENTA\", unidad);\r\n        case 8:\r\n            return DecenasY(\"OCHENTA\", unidad);\r\n        case 9:\r\n            return DecenasY(\"NOVENTA\", unidad);\r\n        case 0:\r\n            return Unidades(unidad);\r\n    }\r\n} //Unidades()\r\n\r\nfunction DecenasY(strSin, numUnidades) {\r\n    if (numUnidades > 0)\r\n        return strSin + \" Y \" + Unidades(numUnidades)\r\n\r\n    return strSin;\r\n} //DecenasY()\r\n\r\nfunction Centenas(num) {\r\n    var centenas = Math.floor(num / 100);\r\n    var decenas = num - (centenas * 100);\r\n\r\n    switch (centenas) {\r\n        case 1:\r\n            if (decenas > 0)\r\n                return \"CIENTO \" + Decenas(decenas);\r\n            return \"CIEN\";\r\n        case 2:\r\n            return \"DOSCIENTOS \" + Decenas(decenas);\r\n        case 3:\r\n            return \"TRESCIENTOS \" + Decenas(decenas);\r\n        case 4:\r\n            return \"CUATROCIENTOS \" + Decenas(decenas);\r\n        case 5:\r\n            return \"QUINIENTOS \" + Decenas(decenas);\r\n        case 6:\r\n            return \"SEISCIENTOS \" + Decenas(decenas);\r\n        case 7:\r\n            return \"SETECIENTOS \" + Decenas(decenas);\r\n        case 8:\r\n            return \"OCHOCIENTOS \" + Decenas(decenas);\r\n        case 9:\r\n            return \"NOVECIENTOS \" + Decenas(decenas);\r\n    }\r\n\r\n    return Decenas(decenas);\r\n} //Centenas()\r\n\r\nfunction Seccion(num, divisor, strSingular, strPlural) {\r\n    var cientos = Math.floor(num / divisor)\r\n    var resto = num - (cientos * divisor)\r\n\r\n    var letras = \"\";\r\n\r\n    if (cientos > 0)\r\n        if (cientos > 1)\r\n            letras = Centenas(cientos) + \" \" + strPlural;\r\n        else\r\n            letras = strSingular;\r\n\r\n    if (resto > 0)\r\n        letras += \"\";\r\n\r\n    return letras;\r\n} //Seccion()\r\n\r\nfunction Miles(num) {\r\n    var divisor = 1000;\r\n    var cientos = Math.floor(num / divisor)\r\n    var resto = num - (cientos * divisor)\r\n\r\n    var strMiles = Seccion(num, divisor, \"UN MIL\", \"MIL\");\r\n    var strCentenas = Centenas(resto);\r\n\r\n    if (strMiles == \"\")\r\n        return strCentenas;\r\n\r\n    return strMiles + \" \" + strCentenas;\r\n} //Miles()\r\n\r\nfunction Millones(num) {\r\n    var divisor = 1000000;\r\n    var cientos = Math.floor(num / divisor)\r\n    var resto = num - (cientos * divisor)\r\n\r\n    if (resto == 0) {\r\n        var strMillones = Seccion(num, divisor, \"UN MILLON DE\", \"MILLONES DE\");\r\n    } else {\r\n        var strMillones = Seccion(num, divisor, \"UN MILLON\", \"MILLONES\");\r\n    }\r\n\r\n    var strMiles = Miles(resto);\r\n\r\n    if (strMillones == \"\")\r\n        return strMiles;\r\n\r\n    return strMillones + \" \" + strMiles;\r\n} //Millones()\r\n\r\nconst  NumeroALetras = (num) => {\r\n    var data = {\r\n        numero: num,\r\n        enteros: Math.floor(num),\r\n        centavos: (((Math.round(num * 100)) - (Math.floor(num) * 100))),\r\n        letrasCentavos: \"\",\r\n        letrasMonedaPlural: 'PESOS', //\"PESOS\", 'Dólares', 'Bolívares', 'etcs'\r\n        letrasMonedaSingular: 'PESO', //\"PESO\", 'Dólar', 'Bolivar', 'etc'\r\n\r\n        letrasMonedaCentavoPlural: \"CENTAVOS\",\r\n        letrasMonedaCentavoSingular: \"CENTAVO\"\r\n    };\r\n\r\n    if (data.centavos > 0) {\r\n        data.letrasCentavos = \"CON \" + (function () {\r\n            if (data.centavos == 1)\r\n                return Millones(data.centavos) + \" \" + data.letrasMonedaCentavoSingular;\r\n            else\r\n                return Millones(data.centavos) + \" \" + data.letrasMonedaCentavoPlural;\r\n        })();\r\n    };\r\n\r\n    if (data.enteros == 0)\r\n        return \"CERO \" + data.letrasMonedaPlural + \" \" + data.letrasCentavos;\r\n    if (data.enteros == 1)\r\n        return Millones(data.enteros) + \" \" + data.letrasMonedaSingular + \" \" + data.letrasCentavos;\r\n    else\r\n        return Millones(data.enteros) + \" \" + data.letrasMonedaPlural + \" \" + data.letrasCentavos;\r\n}\r\n\r\n\r\nexport default NumeroALetras;","import React, { Fragment } from 'react';\r\nimport NumeroALetras from '../NumeroLetras.js';\r\n\r\nconst Letters = ({ cl }) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card-header\">\r\n                {cl < 0 ? `MENOS ${NumeroALetras(Math.abs(cl))}` : NumeroALetras(cl)}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Letters;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport Letters from './Letters';\r\n\r\n\r\nconst Form = ({ valorDolar }) => {\r\n\r\n    //state para el peso chileno\r\n    const [cl, guardarCL] = useState(0);\r\n    //state para el dolar\r\n    const [dolar, guardarDolar] = useState(0);\r\n    //state para el peso dominicano\r\n    const [dom, guardarDom] = useState(0);\r\n    //\r\n    const [clase, guardarClase] = useState('col-md-4');\r\n\r\n\r\n    //actualiza cuando ingresamos en peso chileno\r\n    const actualizarDesdeCL = e => {\r\n        if (isNaN(e)) {\r\n            guardarCL('');\r\n            guardarDolar(0);\r\n            guardarDom(0);\r\n            return;\r\n        }\r\n        guardarCL(e);\r\n        let dolar = (e / valorDolar).toFixed(4);\r\n        guardarDolar(dolar);\r\n        let dom = (e / 13).toFixed(4)\r\n        guardarDom(dom);\r\n    }\r\n\r\n    //actualiza cuando ingresamos dolar\r\n    const actualizarDesdeDolar = e => {\r\n        if (isNaN(e)) {\r\n            guardarDolar('');\r\n            guardarDom(0);\r\n            guardarCL(0);\r\n            return;\r\n        }\r\n        guardarDolar(e);\r\n        let cl = (e * valorDolar).toFixed(4);\r\n        guardarCL(cl);\r\n        let dom = (cl / 13).toFixed(4)\r\n        guardarDom(dom);\r\n    }\r\n\r\n    //actualiza cuando ingresamos en peso dominicano\r\n    const actualizarDesdeDom = e => {\r\n        if (isNaN(e)) {\r\n            guardarDom('');\r\n            guardarDolar(0);\r\n            guardarCL(0);\r\n            return;\r\n        }\r\n        guardarDom(e);\r\n        let cl = (e / 13).toFixed(4);\r\n        guardarCL(cl);\r\n        let dolar = (cl / valorDolar).toFixed(4);\r\n        guardarDolar(dolar);\r\n    }\r\n\r\n    // UseEffect que actualizara las clases de los input cuando el dolar super los 9999\r\n    useEffect(() => {\r\n        if (dolar > 9999) {\r\n            guardarClase('col-md-12')\r\n        } else {\r\n            guardarClase('col-md-4')\r\n        }\r\n    }, [dolar]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <nav className=\"navbar navbar-light bg-light justify-content-md-center\">\r\n                    <a className=\"navbar-brand\" href=\"/#\">Convertidor de monedas</a>\r\n                </nav>\r\n                <div className=\"row mt-3 justify-content-md-center\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                Puedes convertir desde cualquier.\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className={clase}>\r\n                                        <label>Peso Chileno</label>\r\n                                        <div className=\"input-group mb-2\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">$</div>\r\n                                            </div>\r\n                                            <input type=\"number\" className=\"form-control form-control-lg\" placeholder=\"Ingrese valor\" value={cl}\r\n                                                onChange={e => actualizarDesdeCL(parseInt(e.target.value))} onKeyDownCapture={cl === 0 ? () => guardarCL('') : null} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={clase}>\r\n                                        <label>Dólar Estadounidense</label>\r\n                                        <div className=\"input-group mb-2\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">$</div>\r\n                                            </div>\r\n                                            <input type=\"number\" className=\"form-control form-control-lg\" placeholder=\"Ingrese valor\" value={dolar}\r\n                                                onChange={e => actualizarDesdeDolar(parseInt(e.target.value))} onKeyDownCapture={dolar === 0 ? () => guardarDolar('') : null} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={clase}>\r\n                                        <label>Peso Dominicano</label>\r\n                                        <div className=\"input-group mb-2\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">$</div>\r\n                                            </div>\r\n                                            <input type=\"number\" className=\"form-control form-control-lg\" placeholder=\"Ingrese valor\" value={dom}\r\n                                                onChange={e => actualizarDesdeDom(parseInt(e.target.value))} onKeyDownCapture={dom === 0 ? () => guardarDom('') : null} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {cl < 1000000000 && cl > -1000000000 ? cl === '' ? null :\r\n                                <Letters\r\n                                    cl={cl}\r\n                                /> : null\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\n\r\nexport default Form;","import React, { useState, useEffect } from 'react';\nimport Form from './components/Form';\n\nfunction App() {\n\n  const [valorDolar, guardarDolar] = useState(0);\n\n  const consultarAPI = async () => {\n    const api = await fetch('https://mindicador.cl/api/dolar/');\n    const frase = await api.json();\n    let dolar = frase['serie'][0]['valor'];\n    guardarDolar(dolar);\n  }\n\n  //cargar una vez\n  useEffect(() => {\n    consultarAPI();\n  }, [])\n\n  return (\n    <Form valorDolar={valorDolar} />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}